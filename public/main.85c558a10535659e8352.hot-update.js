/*! For license information please see main.85c558a10535659e8352.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatetraewarren("main",{"./app/shaders/hoverSquare/fragment.glsl":(n,e,a)=>{a.r(e),a.d(e,{default:()=>t});const t="#define GLSLIFY 1\nuniform float uAlpha; \nuniform float uState; \nuniform float uTime;\nuniform float uWidth; \nuniform float uRadius;  \nuniform float uLeaveState; \n\nuniform vec2 uPlaneSize; \nuniform vec2 uImageSize; \nuniform vec2 uViewportSize; \n\nuniform sampler2D tMap; \nuniform sampler2D tHover; \nuniform sampler2D tDisplacement;\n\nvarying vec2 vUv; \nvarying vec3 vPosition; \n\nvoid main()\n{\n  vec2 ratio = vec2(\n    min((uPlaneSize.x / uPlaneSize.y) / (uImageSize.x / uImageSize.y), 1.0), \n    min((uPlaneSize.y / uPlaneSize.x) / (uImageSize.y / uImageSize.x), 1.0)\n  ); \n\n  vec2 uv = vec2(\n    vUv.x * ratio.x + (1.0 - ratio.x) * 0.5, \n    vUv.y * ratio.y + (1.0 - ratio.y) * 0.5\n  ); \n\n  vec2 center = vec2(0.5, 0.5);\n\n  vec4 noise = texture2D(tDisplacement, vUv + (uTime * 0.02));\n  float state = uState * 0.66 + noise.g * 0.04;\n\n  float calcSquare = 1.0 - smoothstep(\n    -uWidth, \n    0.0,\n    uRadius * max(\n      abs(distance(center.x * ratio.x, vUv.x * ratio.x)), \n      abs(distance(center.y * ratio.y, vUv.y * ratio.y))) - state * (1.0 + uWidth)\n    );\n\n  float interpolation = pow(abs(calcSquare), 1.0);\n\n  vec4 t1 = texture2D( tMap, (uv - 0.5) * (1.0 - interpolation) + 0.5 );\n  vec4 t2 = texture2D( tHover, (uv - 0.5) * interpolation + 0.5 );\n\n  if(uLeaveState == 1.0)\n  {\n    t2 = vec4(1.,0.918,0.859, uAlpha);\n  }\n\n  gl_FragColor = mix( t1, t2, interpolation );\n  gl_FragColor.a = uAlpha;\n}"}},(function(n){n.h=()=>"10b32b1db2bd7b64531e"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi44NWM1NThhMTA1MzU2NTllODM1Mi5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7dUlBQUEsNjhDQ0FBQSxFQUFvQkMsRUFBSSxJQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhZXdhcnJlbi8uL2FwcC9zaGFkZXJzL2hvdmVyU3F1YXJlL2ZyYWdtZW50Lmdsc2wiLCJ3ZWJwYWNrOi8vdHJhZXdhcnJlbi93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCIjZGVmaW5lIEdMU0xJRlkgMVxcbnVuaWZvcm0gZmxvYXQgdUFscGhhOyBcXG51bmlmb3JtIGZsb2F0IHVTdGF0ZTsgXFxudW5pZm9ybSBmbG9hdCB1VGltZTtcXG51bmlmb3JtIGZsb2F0IHVXaWR0aDsgXFxudW5pZm9ybSBmbG9hdCB1UmFkaXVzOyAgXFxudW5pZm9ybSBmbG9hdCB1TGVhdmVTdGF0ZTsgXFxuXFxudW5pZm9ybSB2ZWMyIHVQbGFuZVNpemU7IFxcbnVuaWZvcm0gdmVjMiB1SW1hZ2VTaXplOyBcXG51bmlmb3JtIHZlYzIgdVZpZXdwb3J0U2l6ZTsgXFxuXFxudW5pZm9ybSBzYW1wbGVyMkQgdE1hcDsgXFxudW5pZm9ybSBzYW1wbGVyMkQgdEhvdmVyOyBcXG51bmlmb3JtIHNhbXBsZXIyRCB0RGlzcGxhY2VtZW50O1xcblxcbnZhcnlpbmcgdmVjMiB2VXY7IFxcbnZhcnlpbmcgdmVjMyB2UG9zaXRpb247IFxcblxcbnZvaWQgbWFpbigpXFxue1xcbiAgdmVjMiByYXRpbyA9IHZlYzIoXFxuICAgIG1pbigodVBsYW5lU2l6ZS54IC8gdVBsYW5lU2l6ZS55KSAvICh1SW1hZ2VTaXplLnggLyB1SW1hZ2VTaXplLnkpLCAxLjApLCBcXG4gICAgbWluKCh1UGxhbmVTaXplLnkgLyB1UGxhbmVTaXplLngpIC8gKHVJbWFnZVNpemUueSAvIHVJbWFnZVNpemUueCksIDEuMClcXG4gICk7IFxcblxcbiAgdmVjMiB1diA9IHZlYzIoXFxuICAgIHZVdi54ICogcmF0aW8ueCArICgxLjAgLSByYXRpby54KSAqIDAuNSwgXFxuICAgIHZVdi55ICogcmF0aW8ueSArICgxLjAgLSByYXRpby55KSAqIDAuNVxcbiAgKTsgXFxuXFxuICB2ZWMyIGNlbnRlciA9IHZlYzIoMC41LCAwLjUpO1xcblxcbiAgdmVjNCBub2lzZSA9IHRleHR1cmUyRCh0RGlzcGxhY2VtZW50LCB2VXYgKyAodVRpbWUgKiAwLjAyKSk7XFxuICBmbG9hdCBzdGF0ZSA9IHVTdGF0ZSAqIDAuNjYgKyBub2lzZS5nICogMC4wNDtcXG5cXG4gIGZsb2F0IGNhbGNTcXVhcmUgPSAxLjAgLSBzbW9vdGhzdGVwKFxcbiAgICAtdVdpZHRoLCBcXG4gICAgMC4wLFxcbiAgICB1UmFkaXVzICogbWF4KFxcbiAgICAgIGFicyhkaXN0YW5jZShjZW50ZXIueCAqIHJhdGlvLngsIHZVdi54ICogcmF0aW8ueCkpLCBcXG4gICAgICBhYnMoZGlzdGFuY2UoY2VudGVyLnkgKiByYXRpby55LCB2VXYueSAqIHJhdGlvLnkpKSkgLSBzdGF0ZSAqICgxLjAgKyB1V2lkdGgpXFxuICAgICk7XFxuXFxuICBmbG9hdCBpbnRlcnBvbGF0aW9uID0gcG93KGFicyhjYWxjU3F1YXJlKSwgMS4wKTtcXG5cXG4gIHZlYzQgdDEgPSB0ZXh0dXJlMkQoIHRNYXAsICh1diAtIDAuNSkgKiAoMS4wIC0gaW50ZXJwb2xhdGlvbikgKyAwLjUgKTtcXG4gIHZlYzQgdDIgPSB0ZXh0dXJlMkQoIHRIb3ZlciwgKHV2IC0gMC41KSAqIGludGVycG9sYXRpb24gKyAwLjUgKTtcXG5cXG4gIGlmKHVMZWF2ZVN0YXRlID09IDEuMClcXG4gIHtcXG4gICAgdDIgPSB2ZWM0KDEuLDAuOTE4LDAuODU5LCB1QWxwaGEpO1xcbiAgfVxcblxcbiAgZ2xfRnJhZ0NvbG9yID0gbWl4KCB0MSwgdDIsIGludGVycG9sYXRpb24gKTtcXG4gIGdsX0ZyYWdDb2xvci5hID0gdUFscGhhO1xcbn1cIjsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCIxMGIzMmIxZGIyYmQ3YjY0NTMxZVwiKSJdLCJuYW1lcyI6WyJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiaCJdLCJzb3VyY2VSb290IjoiIn0=