/*! For license information please see main.11d9ac1a2bf0519e2a92.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatetraewarren("main",{"./app/components/Canvas/Controller/pages/Home/Element/index.js":(e,t,i)=>{i.r(t),i.d(t,{default:()=>o});var s=i("./node_modules/three/build/three.module.js"),a=i("./node_modules/gsap/index.js"),n=i("./app/shaders/home/element/vertex.glsl"),r=i("./app/shaders/home/element/fragment.glsl");class o{constructor({element:e,template:t,link:i,geometry:s,scene:a,screen:n,viewport:r}){this.element=e,this.template=t,this.geo=s,this.scene=a,this.screen=n,this.viewport=r,this.createMaterial(),this.createTexture(),this.createMesh(),this.createBounds(),this.createAnimations()}createMaterial(){this.material=new s.ShaderMaterial({vertexShader:n.default,fragmentShader:r.default,uniforms:{tMap:{value:null},u_alpha:{value:0},u_imageSize:{value:[0,0]},u_planeSize:{value:[0,0]},u_state:{value:0},u_viewportSize:{value:[this.viewport.width,this.viewport.height]}},transparent:!0})}createTexture(){let e=this.element.getAttribute("data-src");this.texture=window.IMAGE_TEXTURES[e],this.material.uniforms.tMap.value=this.texture,this.material.uniforms.u_imageSize.value=[this.texture.source.data.naturalWidth,this.texture.source.data.naturalHeight]}createMesh(){this.plane=new s.Mesh(this.geo,this.material),this.scene.add(this.plane)}createBounds(){this.bounds=this.element.getBoundingClientRect(),this.updateScale(),this.updateX(),this.updateY(),this.plane.material.uniforms.u_planeSize.value=[this.plane.scale.x,this.plane.scale.y]}createAnimations(){this.onAlphaChange=a.default.fromTo(this.material.uniforms.u_alpha,{value:0},{value:1,delay:.5,paused:!0}),this.onStateChange=a.default.fromTo(this.material.uniforms.u_state,{value:0},{value:1,duration:1,ease:"power2.inOut",paused:!0})}show(){this.onAlphaChange.play().eventCallback("onComplete",(()=>{this.onStateChange.play()}))}hide(){this.onStateChange.reverse(),this.onAlphaChange.reverse()}onResize(e){if(e){const{screen:t,viewport:i}=e;t&&(this.screen=t),i&&(this.viewport=i,this.plane.material.uniforms.u_viewportSize.value=[this.viewport.width,this.viewport.height])}this.createBounds()}updateScale(){this.plane.scale.x=this.viewport.width*this.bounds.width/this.screen.width,this.plane.scale.y=this.viewport.height*this.bounds.height/this.screen.height,this.plane.material.uniforms.u_planeSize.value=[this.plane.scale.x,this.plane.scale.y]}updateX(){this.x=this.bounds.left/this.screen.width*this.viewport.width,this.plane.position.x=-this.viewport.width/2+this.plane.scale.x/2+this.x}updateY(){this.y=this.bounds.top/this.screen.height*this.viewport.height,this.plane.position.y=this.viewport.height/2-this.plane.scale.y/2-this.y}update(){this.bounds&&(this.updateScale(),this.updateX(),this.updateY())}}},"./app/components/Canvas/Controller/pages/Home/index.js":(e,t,i)=>{i.r(t),i.d(t,{default:()=>r});var s=i("./node_modules/three/build/three.module.js"),a=(i("./app/components/Canvas/Controller/pages/Home/Element/index.js"),i("./app/components/Canvas/Controller/pages/Home/Background/index.js")),n=i("./app/components/Canvas/Controller/pages/Home/Circle/index.js");class r{constructor({scene:e,screen:t,viewport:i,geo:a}){this.scene=e,this.screen=t,this.viewport=i,this.geo=a,this.dGroup=new s.Group,this.sGroup=new s.Group,this.createElements(),this.createHeader(),this.createFeaturedWork(),this.onResize(),this.scene.add(this.dGroup,this.sGroup)}createElements(){this.home_element=document.querySelector(".home"),this.home_wrapper=document.querySelector(".home__wrapper"),this.headerImage=document.querySelector("img.home__header__portrait__figure__image"),this.background=document.querySelector(".home__showcase"),this.workImages=document.querySelectorAll("img.home__showcase__gallery__image__figure__image")}createHeader(){this.portrait=new Portrait({element:this.headerImage,template:this.template,geometry:this.geo,scene:this.dGroup,screen:this.screen,viewport:this.viewport})}createFeaturedWork(){this.background=new a.default({element:this.background,geometry:this.geo,scene:this.sGroup,screen:this.screen,viewport:this.viewport}),this.works=Array.from(this.workImages,((e,t)=>new n.default({element:e,index:t,template:this.template,geometry:this.geo,scene:this.sGroup,screen:this.screen,viewport:this.viewport})))}onResize(){this.portrait.onResize({screen:this.screen,viewport:this.viewport}),this.background.onResize({screen:this.screen,viewport:this.viewport}),this.works.forEach((e=>{e.onResize({screen:this.screen,viewport:this.viewport})}))}show(){this.portrait.show(),this.background.show(),this.works.forEach((e=>{e.show()}))}hide(){this.portrait.hide(),this.background.hide(),this.works.forEach((e=>{e.hide()}))}update(e){const t=e.current/this.screen.height*this.viewport.height;this.dGroup.position.y=.9*t,this.sGroup.position.y=1*t,this.portrait.update(),this.background.update(e),this.works.forEach((e=>{e.update()}))}destroy(){this.scene.remove(this.dGroup),this.scene.remove(this.sGroup)}}},"./app/shaders/home/element/fragment.glsl":(e,t,i)=>{i.r(t),i.d(t,{default:()=>s});const s="#define GLSLIFY 1\nuniform float u_alpha; \nuniform float u_state; \n\nuniform vec2 u_planeSize; \nuniform vec2 u_imageSize; \nuniform vec2 u_viewportSize; \n\nuniform sampler2D tMap; \n\nvarying vec2 v_uv; \nvarying vec3 v_position; \n\nvoid main()\n{\n  vec2 ratio = vec2(\n    min((u_planeSize.x / u_planeSize.y) / (u_imageSize.x / u_imageSize.y), 1.0), \n    min((u_planeSize.y / u_planeSize.x) / (u_imageSize.y / u_imageSize.x), 1.0)\n  ); \n\n  vec2 uv = vec2(\n    v_uv.x * ratio.x + (1.0 - ratio.x) * 0.5, \n    v_uv.y * ratio.y + (1.0 - ratio.y) * 0.5\n  );\n\n  vec4 image = texture2D(tMap, uv);\n\n  gl_FragColor = image;\n}"},"./app/shaders/home/element/vertex.glsl":(e,t,i)=>{i.r(t),i.d(t,{default:()=>s});const s="#define GLSLIFY 1\nuniform float u_alpha; \nuniform float u_state; \n\nuniform vec2 u_planeSize; \nuniform vec2 u_imageSize; \nuniform vec2 u_viewportSize; \n\nvarying vec2 v_uv; \nvarying vec3 v_position; \n\nvoid main()\n{\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0); \n\n  v_uv = uv; \n  v_position = position; \n}"}},(function(e){e.h=()=>"e8e36ee6a8a3e0bfa487"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,