/*! For license information please see main.bd6efddc22be16bac1f5.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatetraewarren("main",{"./app/components/Canvas/Controller/pages/Work/index.js":(e,t,r)=>{r.r(t),r.d(t,{default:()=>n});var s=r("./node_modules/three/build/three.module.js");Object(function(){var e=new Error("Cannot find module 'gsaap'");throw e.code="MODULE_NOT_FOUND",e}());var o=r("./node_modules/prefix/index.js"),i=r.n(o),l=r("./app/components/Canvas/Controller/pages/Work/Element/index.js");class n{constructor({scene:e,screen:t,viewport:r,geo:o}){this.scene=e,this.screen=t,this.viewport=r,this.geo=o,this.group=new s.Group,this.t_prefix=i()("transform"),this.createElements(),this.createConfig(),this.createImages(),this.onResize(),this.scene.add(this.group),this.show()}createElements(){this.work_element=document.querySelector(".work"),this.work_wrapper=document.querySelector(".work__wrapper"),this.elements=document.querySelectorAll(".work__gallery__image__figure__image"),this.links=document.querySelectorAll(".work__gallery__image__link"),this.disp=(new s.TextureLoader).load(this.elements[0].dataset.displacement)}createConfig(){this.work={scroll:{current:0,target:0,last:0,speed:.1,ease:.05}}}createImages(){this.elems=Array.from(this.elements,((e,t)=>new l.default({element:e,index:t,link:this.links[t],displacement:this.disp,template:this.template,geometry:this.geo,scene:this.group,screen:this.screen,viewport:this.viewport})))}onResize(){this.full_bounds=this.work_wrapper.getBoundingClientRect(),this.elems.forEach((e=>{e.onResize({screen:this.screen,viewport:this.viewport})})),this.work.scroll.limit=this.full_bounds.width-this.elems[0].bounds.width}show(){this.elems.forEach((e=>{e.show()}))}hide(){this.elems.forEach((e=>{e.hide()}))}onTouchDown({y:e}){this.work.scroll.position=this.work.scroll.current}onTouchMove({y:e,x:t}){const r=e.start-e.end,s=t.start-t.end;this.work.scroll.target=this.work.scroll.position-1.5*(r+s)}onTouchUp({y:e}){}onWheel({pixelY:e,pixelX:t}){this.work.scroll.target-=.6*t,this.work.scroll.target-=.6*e}update(){this.work.scroll.target=Object(function(){var e=new Error("Cannot find module 'gsaap'");throw e.code="MODULE_NOT_FOUND",e}()).clamp(-this.work.scroll.limit,0,this.work.scroll.target),this.work.scroll.current=Object(function(){var e=new Error("Cannot find module 'gsaap'");throw e.code="MODULE_NOT_FOUND",e}()).interpolate(this.work.scroll.current,this.work.scroll.target,this.work.scroll.ease),this.work_element.style[this.t_prefix]=`translateX(${this.work.scroll.current}px)`,this.work.scroll.current>-.01&&(this.work.scroll.current=0),this.elems.forEach((e=>{e.update(this.work.scroll.current,this.work.scroll.last)})),this.work.scroll.last=this.work.scroll.current}destroy(){this.scene.remove(this.group)}}}},(function(e){e.h=()=>"0d1d9274adea30311662"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,