/*! For license information please see main.32a860e690db5f36daa6.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatetraewarren("main",{"./app/components/Canvas/Controller/pages/Home/StaticElement/index.js":(e,t,i)=>{i.r(t),i.d(t,{default:()=>h});var a=i("./node_modules/three/build/three.module.js"),s=i("./node_modules/gsap/index.js");Object(function(){var e=new Error("Cannot find module 'shaders/home/circle/vertex.glsl'");throw e.code="MODULE_NOT_FOUND",e}()),Object(function(){var e=new Error("Cannot find module 'shaders/home/circle/fragment.glsl'");throw e.code="MODULE_NOT_FOUND",e}());class h{constructor({element:e,index:t,template:i,link:a,geometry:s,scene:h,screen:n,viewport:r}){this.element=e,this.index=t,this.template=i,this.geo=s,this.scene=h,this.screen=n,this.viewport=r,this.createMaterial(),this.createTexture(),this.createMesh(),this.createBounds(),this.createAnimations()}createMaterial(){this.material=new a.ShaderMaterial({vertexShader:Object(function(){var e=new Error("Cannot find module 'shaders/home/circle/vertex.glsl'");throw e.code="MODULE_NOT_FOUND",e}()),fragmentShader:Object(function(){var e=new Error("Cannot find module 'shaders/home/circle/fragment.glsl'");throw e.code="MODULE_NOT_FOUND",e}()),uniforms:{tMap:{value:null},u_alpha:{value:0},u_imageSize:{value:[0,0]},u_planeSize:{value:[0,0]},u_state:{value:0},u_viewportSize:{value:[this.viewport.width,this.viewport.height]}},transparent:!0})}createTexture(){let e=this.element.getAttribute("data-src");this.texture=window.IMAGE_TEXTURES[e],this.material.uniforms.tMap.value=this.texture,this.material.uniforms.u_imageSize.value=[this.texture.source.data.naturalWidth,this.texture.source.data.naturalHeight]}createMesh(){this.plane=new a.Mesh(this.geo,this.material),this.scene.add(this.plane)}createBounds(){this.bounds=this.element.getBoundingClientRect(),this.updateScale(),this.updateX(),this.updateY(),this.plane.material.uniforms.u_planeSize.value=[this.plane.scale.x,this.plane.scale.y]}createAnimations(){this.onAlphaChange=s.default.fromTo(this.material.uniforms.u_alpha,{value:0},{value:1,delay:.5,paused:!0}),this.onStateChange=s.default.fromTo(this.material.uniforms.u_state,{value:0},{value:1,duration:1,ease:"power2.inOut",paused:!0})}show(){this.onAlphaChange.play().eventCallback("onComplete",(()=>{this.onStateChange.play()}))}hide(){this.onStateChange.reverse(),this.onAlphaChange.reverse()}onResize(e){if(e){const{screen:t,viewport:i}=e;t&&(this.screen=t),i&&(this.viewport=i,this.plane.material.uniforms.u_viewportSize.value=[this.viewport.width,this.viewport.height])}this.createBounds()}updateScale(){this.plane.scale.x=this.viewport.width*this.bounds.width/this.screen.width,this.plane.scale.y=this.viewport.height*this.bounds.height/this.screen.height,this.plane.material.uniforms.u_planeSize.value=[this.plane.scale.x,this.plane.scale.y]}updateX(){this.x=this.bounds.left/this.screen.width*this.viewport.width,this.plane.position.x=-this.viewport.width/2+this.plane.scale.x/2+this.x}updateY(){this.y=this.bounds.top/this.screen.height*this.viewport.height,this.plane.position.y=this.viewport.height/2-this.plane.scale.y/2-this.y}update(){this.bounds&&(this.updateScale(),this.updateX(),this.updateY())}}}},(function(e){e.h=()=>"4f552a104d5efc0eeff0"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,