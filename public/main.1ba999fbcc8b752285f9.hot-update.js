/*! For license information please see main.1ba999fbcc8b752285f9.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatetraewarren("main",{"./app/components/Canvas/Controller/pages/Home/CircleElement/index.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>r});var i=s("./node_modules/three/build/three.module.js"),a=s("./node_modules/gsap/index.js"),h=s("./app/shaders/vertex.glsl"),n=s("./app/shaders/hover/fragment.glsl");class r{constructor({element:e,index:t,link:s,displacement:i,template:a,geometry:h,scene:n,screen:r,viewport:o}){this.element=e,this.index=t,this.link=s,this.disp=i,this.template=a,this.geo=h,this.scene=n,this.screen=r,this.viewport=o,this.time=0,this.animations={show:!1,hide:!1},this.createMaterial(),this.createTexture(),this.createMesh(),this.createAnimations(),this.createBounds()}createMaterial(){this.material=new i.ShaderMaterial({vertexShader:h.default,fragmentShader:n.default,uniforms:{tMap:{value:null},tHover:{value:null},displacement:{value:this.disp},u_alpha:{value:0},u_state:{value:0},u_time:{value:0},u_width:{value:.1},u_radius:{value:.3},u_imageSize:{value:[0,0]},u_planeSize:{value:[0,0]},u_state:{value:0},u_viewportSize:{value:[this.viewport.width,this.viewport.height]}},transparent:!0})}createTexture(){let e=this.element.getAttribute("data-src"),t=this.element.getAttribute("data-hover");this.texture=window.IMAGE_TEXTURES[e],this.texture2=window.IMAGE_TEXTURES[t],this.material.uniforms.tMap.value=this.texture,this.material.uniforms.tHover.value=this.texture2,this.material.uniforms.u_imageSize.value=[this.texture.source.data.naturalWidth,this.texture.source.data.naturalHeight]}createMesh(){this.plane=new i.Mesh(this.geo,this.material),this.scene.add(this.plane)}createBounds(){this.bounds=this.element.getBoundingClientRect(),this.updateScale(),this.updateX(),this.updateY(),this.plane.material.uniforms.u_planeSize.value=[this.plane.scale.x,this.plane.scale.y]}createAnimations(){this.onAlphaChange=a.default.fromTo(this.material.uniforms.u_alpha,{value:0},{value:1,delay:.5,paused:!0}),this.onStateChange=a.default.fromTo(this.material.uniforms.u_state,{value:0},{value:.2,duration:1,ease:"power2.inOut",paused:!0}),this.onShowScale=a.default.fromTo(this.element,{scale:0},{scale:1,duration:1,delay:.2*this.index,ease:"power2.inOut",paused:!0,onComplete:()=>{this.animations.show=!0}})}onMouseEnter(){this.onStateChange.play()}onMouseLeave(){this.onStateChange.reverse()}show(){this.addEventListeners(),this.onShowScale.play(),this.onAlphaChange.play()}hide(){this.animations.hide=!0,this.removeEventListeners(),this.onShowScale.reverse(),this.onAlphaChange.reverse()}onResize(e){if(e){const{screen:t,viewport:s}=e;t&&(this.screen=t),s&&(this.viewport=s,this.plane.material.uniforms.u_viewportSize.value=[this.viewport.width,this.viewport.height])}this.createBounds()}updateScale(){this.plane.scale.x=this.viewport.width*this.bounds.width/this.screen.width,this.plane.scale.y=this.viewport.height*this.bounds.height/this.screen.height,this.plane.material.uniforms.u_planeSize.value=[this.plane.scale.x,this.plane.scale.y]}updateX(){this.x=this.bounds.left/this.screen.width*this.viewport.width,this.plane.position.x=-this.viewport.width/2+this.plane.scale.x/2+this.x}updateY(){this.y=this.bounds.top/this.screen.height*this.viewport.height,this.plane.position.y=this.viewport.height/2-this.plane.scale.y/2-this.y}update(){this.bounds&&(this.time+=.005,this.plane.material.uniforms.u_time.value=this.time,this.animations.show||this.createBounds(),this.animations.hide&&this.createBounds(),this.updateScale(),this.updateX(),this.updateY())}addEventListeners(){this.link.addEventListener("mouseenter",this.onMouseEnter.bind(this)),this.link.addEventListener("mouseleave",this.onMouseLeave.bind(this))}removeEventListeners(){this.link.removeEventListener("mouseenter",this.onMouseEnter),this.link.removeEventListener("mouseleave",this.onMouseLeave)}}},"./app/components/Canvas/Controller/pages/Home/index.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>o});var i=s("./node_modules/three/build/three.module.js"),a=s("./app/components/Canvas/Controller/pages/Home/DelayedElement/index.js"),h=s("./app/components/Canvas/Controller/pages/Home/StaticElement/index.js"),n=s("./app/components/Canvas/Controller/pages/Home/CircleElement/index.js"),r=s("./app/components/Canvas/Controller/pages/Home/Background/index.js");class o{constructor({scene:e,screen:t,viewport:s,geo:a}){this.scene=e,this.screen=t,this.viewport=s,this.geo=a,this.dGroup=new i.Group,this.sGroup=new i.Group,this.createElements(),this.createImages(),this.onResize(),this.scene.add(this.dGroup,this.sGroup),this.show()}createElements(){this.home_element=document.querySelector(".home"),this.home_wrapper=document.querySelector(".home__wrapper"),this.delayedElements=document.querySelectorAll('[data-type="delay"]'),this.staticElements=document.querySelectorAll('[data-type="static"]'),this.circleElements=document.querySelectorAll(".home__showcase__gallery__image__figure__image"),this.backgroundElement=document.querySelector('[data-type="background"]'),this.links=document.querySelectorAll(".home__showcase__gallery__image__link"),this.disp=(new i.TextureLoader).load(this.circleElements[0].dataset.displacement)}createImages(){this.dElems=Array.from(this.delayedElements,((e,t)=>new a.default({element:e,index:t,template:this.template,geometry:this.geo,scene:this.dGroup,screen:this.screen,viewport:this.viewport}))),this.sElems=Array.from(this.staticElements,((e,t)=>new h.default({element:e,index:t,template:this.template,geometry:this.geo,scene:this.sGroup,screen:this.screen,viewport:this.viewport}))),this.cElems=Array.from(this.circleElements,((e,t)=>new n.default({element:e,index:t,link:this.links[t],displacement:this.disp,template:this.template,geometry:this.geo,scene:this.sGroup,screen:this.screen,viewport:this.viewport}))),this.background=new r.default({element:this.backgroundElement,geometry:this.geo,scene:this.sGroup,screen:this.screen,viewport:this.viewport})}onResize(){this.dElems.forEach((e=>{e.onResize({screen:this.screen,viewport:this.viewport})})),this.sElems.forEach((e=>{e.onResize({screen:this.screen,viewport:this.viewport})})),this.cElems.forEach((e=>{e.onResize({screen:this.screen,viewport:this.viewport})})),this.background.onResize({screen:this.screen,viewport:this.viewport})}show(){this.dElems.forEach((e=>{e.show()})),this.sElems.forEach((e=>{e.show()})),this.cElems.forEach((e=>{e.show()})),this.background.show()}hide(){this.dElems.forEach((e=>{e.hide()})),this.sElems.forEach((e=>{e.hide()})),this.cElems.forEach((e=>{e.hide()})),this.background.hide()}update(e){const t=e.current/this.screen.height*this.viewport.height;this.dGroup.position.y=.9*t,this.sGroup.position.y=t,this.dElems.forEach((e=>{e.update()})),this.sElems.forEach((e=>{e.update()})),this.cElems.forEach((e=>{e.update()})),this.background.update(e)}destroy(){this.scene.remove(this.dGroup),this.scene.remove(this.sGroup)}}}},(function(e){e.h=()=>"27dd8e6d4ccfd7b54d7e"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,