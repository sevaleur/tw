/*! For license information please see main.75d61be234a9f78568f8.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatetraewarren("main",{"./app/components/Canvas/Controller/pages/Home/index.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>h});var i=s("./node_modules/three/build/three.module.js"),r=s("./app/components/Canvas/Controller/pages/Home/DelayedElement/index.js"),o=s("./app/components/Canvas/Controller/pages/Home/StaticElement/index.js");Object(function(){var e=new Error("Cannot find module '/glElements/CircleElement'");throw e.code="MODULE_NOT_FOUND",e}());var n=s("./app/components/Canvas/Controller/pages/Home/Background/index.js");class h{constructor({scene:e,screen:t,viewport:s,geo:r}){this.scene=e,this.screen=t,this.viewport=s,this.geo=r,this.dGroup=new i.Group,this.sGroup=new i.Group,this.createElements(),this.createImages(),this.onResize(),this.scene.add(this.dGroup,this.sGroup),this.show()}createElements(){this.home_element=document.querySelector(".home"),this.home_wrapper=document.querySelector(".home__wrapper"),this.delayedElements=document.querySelectorAll('[data-type="delay"]'),this.staticElements=document.querySelectorAll('[data-type="static"]'),this.circleElements=document.querySelectorAll(".home__showcase__gallery__image__figure__image"),this.backgroundElement=document.querySelector('[data-type="background"]'),this.links=document.querySelectorAll(".home__showcase__gallery__image__link"),this.disp=(new i.TextureLoader).load(this.circleElements[0].dataset.displacement)}createImages(){this.dElems=Array.from(this.delayedElements,((e,t)=>new r.default({element:e,index:t,template:this.template,geometry:this.geo,scene:this.dGroup,screen:this.screen,viewport:this.viewport}))),this.sElems=Array.from(this.staticElements,((e,t)=>new o.default({element:e,index:t,template:this.template,geometry:this.geo,scene:this.sGroup,screen:this.screen,viewport:this.viewport}))),this.cElems=Array.from(this.circleElements,((e,t)=>new Object(function(){var e=new Error("Cannot find module '/glElements/CircleElement'");throw e.code="MODULE_NOT_FOUND",e}())({element:e,index:t,link:this.links[t],displacement:this.disp,template:this.template,geometry:this.geo,scene:this.sGroup,screen:this.screen,viewport:this.viewport}))),this.background=new n.default({element:this.backgroundElement,geometry:this.geo,scene:this.sGroup,screen:this.screen,viewport:this.viewport})}onResize(){this.dElems.forEach((e=>{e.onResize({screen:this.screen,viewport:this.viewport})})),this.sElems.forEach((e=>{e.onResize({screen:this.screen,viewport:this.viewport})})),this.cElems.forEach((e=>{e.onResize({screen:this.screen,viewport:this.viewport})})),this.background.onResize({screen:this.screen,viewport:this.viewport})}show(){this.dElems.forEach((e=>{e.show()})),this.sElems.forEach((e=>{e.show()})),this.cElems.forEach((e=>{e.show()})),this.background.show()}hide(){this.dElems.forEach((e=>{e.hide()})),this.sElems.forEach((e=>{e.hide()})),this.cElems.forEach((e=>{e.hide()})),this.background.hide()}update(e){const t=e.current/this.screen.height*this.viewport.height;this.dGroup.position.y=.9*t,this.sGroup.position.y=t,this.dElems.forEach((e=>{e.update()})),this.sElems.forEach((e=>{e.update()})),this.cElems.forEach((e=>{e.update()})),this.background.update(e)}destroy(){this.scene.remove(this.dGroup),this.scene.remove(this.sGroup)}}}},(function(e){e.h=()=>"d7ab8d52423cee4f455a"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,