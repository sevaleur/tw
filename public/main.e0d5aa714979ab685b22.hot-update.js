/*! For license information please see main.e0d5aa714979ab685b22.hot-update.js.LICENSE.txt */
"use strict";self.webpackHotUpdatetraewarren("main",{"./app/pages/work/index.js":(e,s,t)=>{t.r(s),t.d(s,{default:()=>l});var r=t("./node_modules/gsap/index.js"),n=t("./app/classes/Page.js"),i=t("./app/animations/Hover/Visualiser/index.js"),o=t("./app/animations/Hover/WP_Title/index.js"),a=t("./app/utils/colorVariables.js");class l extends n.default{constructor(){super({element:".work",elements:{galleryBorders:".work__borders",galleryCovers:".work__gallery__image__cover",links:".work__gallery__image__link",titles:".work__titles__title__text",index:".work__index",indexCurrent:".work__index__current",indexNumber:".work__index__number",indexNumberText:".work__index__number__text",indexSlash:".work__index__slash",indexSlashText:".work__index__slash__text",indexTotal:".work__index__total",indexTotalText:".work__index__total__text",visualiser:".work__visualiser",visualiserBox:".work__visualiser__box",visualiserCover:".work__visualiser__box__cover",visualiserBoxInner:".work__visualiser__box__inner"},background:a.ANTIQUE_WHITE,color:a.DARK_JUNGLE_GREEN})}create(){super.create(),this.createAnimations(),this.elements.indexTotalText.innerHTML=this.elements.links.length}createAnimations(){super.createAnimations(!1),this.boxSelect=Array.from(this.elements.visualiserBoxInner,((e,s)=>new i.default(e,a.AEROSPACE_ORANGE))),this.workSelect=Array.from(this.elements.titles,((e,s)=>new o.default(e))),this.workSelect=Array.from(this.elements.titles,((e,s)=>new o.default(e))),this.onIndexSlashShow=r.default.fromTo(this.elements.indexSlashText,{scaleY:0},{scaleY:1,duration:1,ease:"power2.inOut",paused:!0}),this.onIndexNumberShow=r.default.fromTo(this.elements.indexNumberText,{xPercent:100},{xPercent:0,duration:1,delay:.5,ease:"power2.inOut",paused:!0}),this.onIndexTotalShow=r.default.fromTo(this.elements.indexTotalText,{xPercent:-100},{xPercent:0,duration:1,delay:.5,ease:"power2.inOut",paused:!0}),this.onCoverHide=r.default.fromTo([this.elements.visualiserCover,this.elements.galleryCovers],{scaleY:1},{scaleY:0,duration:1,delay:.5,ease:"expo.inOut",stagger:.02,paused:!0}),this.onGalleryShow=r.default.fromTo(this.elements.galleryBorders,{scaleX:0},{scaleX:1,duration:1,ease:"power2.inOut",paused:!0})}onMouseEnter(e){this.elements.indexNumberText.innerHTML=e+1,this.boxSelect[e].show(),this.workSelect[e].show()}onMouseLeave(e){this.elements.indexNumberText.innerHTML=0,this.boxSelect[e].hide(),this.workSelect[e].hide()}show(){super.show(),this.onIndexSlashShow.play(),this.onIndexNumberShow.play(),this.onIndexTotalShow.play(),this.onCoverHide.play(),this.onGalleryShow.play()}hide(){return super.hide(!0),new Promise((e=>{this.onIndexSlashShow.reverse(),this.onIndexNumberShow.reverse(),this.onIndexTotalShow.reverse(),this.onCoverHide.reverse(),this.onGalleryShow.reverse().eventCallback("onReverseComplete",(()=>{e()}))}))}addEventListeners(){super.addEventListeners(),this.elements.links.forEach(((e,s)=>{e.addEventListener("mouseenter",this.onMouseEnter.bind(this,s)),e.addEventListener("mouseleave",this.onMouseLeave.bind(this,s))}))}removeEventListeners(){super.removeEventListeners()}}}},(function(e){e.h=()=>"bdc09c49e5b38b163a3f"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,